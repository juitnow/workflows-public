# =================================================== #
# Automatically Generated Workflow File, DO NOT EDIT! #
# =================================================== #

name: Release Package (with DB)
on:
  workflow_call:
    secrets:
      git_token:
        required: false
      npm_token:
        required: true
    inputs:
      workspaces:
        type: boolean
        required: false
        default: false
jobs:
  release:
    runs-on: ubuntu-latest
    name: Release Package (with DB)
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: github
          POSTGRES_PASSWORD: github
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.git_token || github.token }}
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org
      - name: Build Package
        run: |
          npm clean-install ${{ inputs.workspaces && '--workspaces' }}
          npm run build ${{ inputs.workspaces && '--workspaces' }}
        env:
          PGPASSWORD: github
          PGHOST: localhost
          PGUSER: github
          PGPORT: 5432
      - name: Publish Package
        run: |
          VERSION="$(node -p 'require("./package.json").version')"

          test -z "$(git ls-remote --tags origin "v${VERSION}")" || {
            echo "Release ${VERSION} already tagged, exiting..."
            echo "::notice::Release ${VERSION} already tagged"
            exit 0
          }

          git config user.email 'developers@juit.com'
          git config user.name 'Github Workflows'
          git tag -a -m "v${VERSION}" "v${VERSION}" "${{ github.sha }}"
          git push --tags

          gh release create "v${VERSION}" \
            --title "Release ${VERSION}" \
            --target "${{ github.sha }}" \
            --verify-tag

          npm publish ${{ inputs.workspaces && '--workspaces' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
          GH_TOKEN: ${{ github.token }}

